/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ComboboxSelectOnlyOption } from "./components/combobox-select-only/combobox-select-only";
export namespace Components {
    interface ComboboxSelectOnly {
        /**
          * @ControlType object
          * @Type Array<ComboboxSelectOnlyOption>
          * @Description Options array for the component
          * @Required true
          * @Example [ { "label": "Europe", "value": "Europe" }, { "label": "Asia", "value": "Asia" }, { "label": "Africa", "value": "Africa" }, { "label": "Australia", "value": "Australia" }, { "label": "North America", "value": "North America" }, { "label": "South America", "value": "South America" } ]
         */
        "options": Array<ComboboxSelectOnlyOption> | string;
        /**
          * @Example No options selected
         */
        "placeholder": string;
        /**
          * 4. Internal props (context and connect) Inlined decorator, alphabetical order.
         */
        "value": string | number | boolean;
    }
}
declare global {
    interface HTMLComboboxSelectOnlyElement extends Components.ComboboxSelectOnly, HTMLStencilElement {
    }
    var HTMLComboboxSelectOnlyElement: {
        prototype: HTMLComboboxSelectOnlyElement;
        new (): HTMLComboboxSelectOnlyElement;
    };
    interface HTMLElementTagNameMap {
        "combobox-select-only": HTMLComboboxSelectOnlyElement;
    }
}
declare namespace LocalJSX {
    interface ComboboxSelectOnly {
        /**
          * @ControlType object
          * @Type Array<ComboboxSelectOnlyOption>
          * @Description Options array for the component
          * @Required true
          * @Example [ { "label": "Europe", "value": "Europe" }, { "label": "Asia", "value": "Asia" }, { "label": "Africa", "value": "Africa" }, { "label": "Australia", "value": "Australia" }, { "label": "North America", "value": "North America" }, { "label": "South America", "value": "South America" } ]
         */
        "options"?: Array<ComboboxSelectOnlyOption> | string;
        /**
          * @Example No options selected
         */
        "placeholder"?: string;
        /**
          * 4. Internal props (context and connect) Inlined decorator, alphabetical order.
         */
        "value"?: string | number | boolean;
    }
    interface IntrinsicElements {
        "combobox-select-only": ComboboxSelectOnly;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "combobox-select-only": LocalJSX.ComboboxSelectOnly & JSXBase.HTMLAttributes<HTMLComboboxSelectOnlyElement>;
        }
    }
}
